version: 2.1

parameters:
  nightly_build:
    type: boolean
    default: false
  weekly_build:
    type: boolean
    default: false

executors:
  manylinux2014:
    docker:
      - image: quay.io/pypa/manylinux2014_x86_64

jobs:
  linux_build_wheels:
    parameters:
      python_version:
        type: string
        default: "38"
      extra_env:
        type: string
        default: "DEV_RELEASE=1"
    executor: manylinux2014
    steps:
      - checkout
      - run:
          name: Build wheel
          command: |
            PYBIN=/opt/python/cp<< parameters.python_version >>-cp<< parameters.python_version >>/bin
            $PYBIN/pip install -U pip
            $PYBIN/pip install build
            SUPER_BUILD=ON \
              << parameters.extra_env >> \
              CMAKE_BUILD_PARALLEL_LEVEL="" \
              $PYBIN/python -m build --wheel
            auditwheel show dist/*
            auditwheel repair dist/*
      - store_artifacts:
          path: dist/wheelhouse/

  mac_build_wheels:
    machine: true
    resource_class: ml-explore/m-builder
    parameters:
      python_version:
        type: string
        default: "3.8"
      macos_version:
        type: string
        default: "14"
      extra_env:
        type: string
        default: "DEV_RELEASE=1"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            eval "$(conda shell.bash hook)"
            rm -r $CONDA_PREFIX/envs/runner-env
            conda create -y -n runner-env python=<< parameters.python_version >>
            conda activate runner-env
            pip install -U pip
            pip install build
            pip install delocate
            DEVELOPER_DIR=$(developer_dir_macos_<< parameters.macos_version >>) \
              CMAKE_BUILD_PARALLEL_LEVEL="" \
              CMAKE_ARGS="-DMLX_ENABLE_AWS=ON" \
              << parameters.extra_env >> \
              SUPER_BUILD=ON \
              python -m build --wheel
            delocate-listdeps dist/*
            delocate-wheel dist/*
      - store_artifacts:
          path: dist/

workflows:
  build_on_commit:
    jobs:
      - linux_build_wheels
      - mac_build_wheels

#  build_release:
#    when:
#      and:
#        - not: << pipeline.parameters.nightly_build >>
#        - not: << pipeline.parameters.weekly_build >>
#    jobs:
#      - linux_build:
#          filters:
#            tags:
#              only: /^v.*/
#            branches:
#              ignore: /.*/
#          matrix:
#            parameters:
#              python_version: ["py38", "py39", "py310", "py311"]
#              extra_env: ["PYPI_RELEASE=1"]
#      - mac_build:
#          filters:
#            tags:
#              only: /^v.*/
#            branches:
#              ignore: /.*/
#          matrix:
#            parameters:
#              python_version: ["3.8", "3.9", "3.10", "3.11"]
#              macos_version: ["13", "14"]
#              extra_env: ["PYPI_RELEASE=1"]
#
#  nightly_build:
#    when: << pipeline.parameters.nightly_build >>
#    jobs:
#      - linux_build:
#          matrix:
#            parameters:
#              python_version: ["py38", "py39", "py310", "py311"]
#              extra_env: [""]
#      - mac_build:
#          matrix:
#            parameters:
#              python_version: ["3.8", "3.9", "3.10", "3.11"]
#              macos_version: ["13", "14"]
#              extra_env: [""]
#
#  weekly_build:
#    when: << pipeline.parameters.weekly_build >>
#    jobs:
#      - linux_build:
#          matrix:
#            parameters:
#              python_version: ["py38", "py39", "py310", "py311"]
#              extra_env: ["DEV_RELEASE=1"]
#      - mac_build:
#          matrix:
#            parameters:
#              python_version: ["3.8", "3.9", "3.10", "3.11"]
#              macos_version: ["13", "14"]
#              extra_env: ["DEV_RELEASE=1"]
